# C-a is the new <prefix> key
unbind-key C-b
set-option -g prefix C-a
bind-key C-a send-prefix 

# mouse behavior
setw -g mouse on

# Reload Config by <prefix> + CTRL + u
# DO NOT USE C-r BECAUSE IT IS TAKEN BY RESURRECT PLUGIN
bind-key C-u source-file ~/.tmux.conf \; display " Config Reloaded !"

set-option -g base-index 1                # window index will start with 1
set-window-option -g pane-base-index 1    # pane index will start with 1
set-option -g renumber-windows on         

set-option -g display-time 2000            # By default, status msg disappears in the blink of an eye (750ms)
set-option -g display-panes-time 2000      # By default, pane number disappears in 1 s
set-option -g history-limit 50000          # maximum number of lines held in window history - crank it up from 2k default
set-option -g lock-after-time 3600         # lock the session after 61 mins of inactivity. Sometimes, it is good to protect your screen to make sure other's can't see enough.
set-option -wg automatic-rename off        # default names are too vague to see. Let me name it.

## Managing sessions and panes
unbind-key x               # unbind-key “x” from it’s current job of “ask and then close”
bind-key x kill-pane       # rebind-key it to just “close”
bind-key X kill-session    # key combo for killing the entire session - <prefix> + shift + x
bind-key S command-prompt -p "New Session:" "new-session -A -s '%%'" # Create a new session

bind-key | split-window -h -c "#{pane_current_path}" # let's open pane with current directory with -c option
bind-key _ split-window -v -c "#{pane_current_path}"

## MOVEMENT
# Pane: Vim Style Movements
bind-key -r h select-pane -L              # go left
bind-key -r j select-pane -D              # go down
bind-key -r l select-pane -R              # go right
bind-key -r k select-pane -U              # go up

# Pane: Arrow Movements
bind-key Up select-pane -U
bind-key Down select-pane -D
bind-key Left select-pane -L
bind-key Right select-pane -R

# Window: Movements
bind-key L last-window
bind-key -r C-h select-window -t :-              # cycle through the windows for quick window selection
bind-key -r C-l select-window -t :+

# word separators for automatic word selection
set-window-option -g word-separators ' @"=()[]'  # default => ‘ -_@’.

# tmux adds a short, almost imperceptible delay between the commands that can cause funny behavior when running vim inside tmux.
set-option -s escape-time 0

# Command Prompt Movements:  within the tmux command prompt and the command prompt is accessed using <P>: (in the status line)
set-option -g status-keys vi

# Vim Style - Resize a pane two rows at a time
bind-key -r H resize-pane -L 2
bind-key -r J resize-pane -D 2
bind-key -r K resize-pane -U 2
bind-key -r L resize-pane -R 2

# To navigating through output in quick way, enable vim navigation keys
set-window-option -g mode-keys vi
set-option -g focus-events on

# Vim Style in Copy-Mode "<prefix> ["
setw -g mode-keys vi
set -g set-clipboard off
## Enter in visual mode by pressing v
bind-key -T copy-mode-vi v send-keys -X begin-selection
## Yank the selection and exit visual mode
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy" \; display-message " Copied to system clipboard"
## Copy with mouse
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy" display-message " Copied to system clipboard"
unbind-key p
bind-key p paste-buffer # default "<prefix> ]"

# To take ASCII screenshots (tmux-resurrect uses C-s for saving, here binding to Alt-s ) .
# create the dir for storing screenshots
bind-key M-s run "tmux capture-pane; tmux save-buffer ~/.mytmux/pane_screenshots/\"$(date +%FT%T)\".screenshots"

## COLORS
## List of all colors available in tmux:
## run in bash
# for i in {0..255}; do
#     printf '\x1b[38;5;%dmcolour%d\x1b[0m\n' $i $i
# done

# toggle status bar
bind-key -n C-t set-option -g status 

# Status Bar
# theme colors
# gui colors
set -g default-terminal "screen-256color"
set -ag terminal-overrides ",xterm-256color:RGB"

STATUS_BAR_BG_COLOR=colour235
STATUS_BAR_FG_COLOR=white
set-option -g status-style fg=$STATUS_BAR_FG_COLOR,bg=$STATUS_BAR_BG_COLOR
# set-option -g status-justify centre
set-window-option -g window-status-style fg=white,bg=$STATUS_BAR_BG_COLOR
# set -g window-status-format " #I #W "
# set -g window-status-current-format " #I #W "
set -g window-status-current-format "#[fg=$STATUS_BAR_BG_COLOR]#[bg=colour211]#[fg=colour16]#[bg=colour211] #I #W #[fg=colour211]#[bg=$STATUS_BAR_BG_COLOR]"
set -g window-status-format "#[fg=#f8f8f2]#[bg=$STATUS_BAR_BG_COLOR] #I #W #[fg=$STATUS_BAR_BG_COLOR] "
# set-window-option -g window-status-current-style fg=colour16,bold,bg=colour211
# set-window-option -g window-status-last-style fg=white,bg=colour235
# set-window-option -g window-status-separator " "
#

# Left Side
# Show my active session, window, pane name
set-option -g status-left-length 50   # default 10
# set-option -g status-left "[#[fg=white]S: #S, #[fg=colour11]W #I-#W, #[fg=colour3]P: #P #[fg=white]]"
# Lite active session:window.pane view
# Session control Box
SESSION_CONTROL_BG=colour49
SESSION_CONTROL_FG=colour16
SESSION_CONTROL_NEXT_BG=default
set-option -g status-left "#[bg=$SESSION_CONTROL_BG,fg=$SESSION_CONTROL_FG] #S:#I.#P #[bg=$SESSION_CONTROL_NEXT_BG]#[fg=$SESSION_CONTROL_BG] "
# set-option -g status-left-style

# Right Side
set-option -g status-right-length 60   # default 50
set-option -g status-right "#[fg=grey,dim,bg=default] uptime: #(uptime | cut -f 4-5 -d\" \" | cut -f 1 -d\",\")"

# Enable Activity Alerts
set-option -g status-interval 60           # Update the status line every 60 seconds (15 is default)
set-window-option -g monitor-activity on   # highlights the window name in the status line

# pane border
set -g pane-border-style fg='#6272a4'
set -g pane-active-border-style fg='#ff79c6'

# message text
MESSAGE_STYLE_BG=$STATUS_BAR_BG_COLOR
MESSAGE_STYLE_FG='#8be9fd'
set -g message-style bg=$MESSAGE_STYLE_BG,fg=MESSAGE_STYLE_FG


## MISCELANEOUS
set -g status-interval 60

CPU_INFO_BG='#FF915B'
CPU_INFO_FG=colour16
CPU_INFO_NEXT_BG=$STATUS_BAR_BG_COLOR
CPU_INFO="#[bg=$CPU_INFO_NEXT_BG,fg=$CPU_INFO_BG]#[bg=$CPU_INFO_BG,fg=$CPU_INFO_FG] CPU #{cpu_percentage}"

## wttr.in - format doc: https://github.com/chubin/wttr.in?tab=readme-ov-file#one-line-output
# WEATHER='#(curl -s wttr.in/?format\="%%l:+%%c%%t+%%28%%f%%29%%60%%w&period=60")'
## lite version
WEATHER_BG=colour137
WEATHER_FG=$STATUS_BAR_BG_COLOR
WEATHER_NEXT_BG=$CPU_INFO_BG
WEATHER="#[fg=$WEATHER_BG,bg=$WEATHER_NEXT_BG]#[bg=$WEATHER_BG,fg=$WEATHER_FG] #(curl -s wttr.in/Barcelona?format\="%%c%%t+%%l+UV:%%u\n&period=60")"

DATE_TIME_BG=colour62
DATE_TIME_FG=colour255
DATE_TIME_NEXT_BG=$WEATHER_BG
DATE_TIME="#[fg=$DATE_TIME_BG,bg=$DATE_TIME_NEXT_BG]#[bg=$DATE_TIME_BG,fg=$DATE_TIME_FG] #(date +'%a %d/%m %H:%M')"

set -g @ping_colorize false
set -g status-right "#{ping}ms $CPU_INFO $WEATHER $DATE_TIME "

# undercurl
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-cpu'
set -g @plugin 'ayzenquwe/tmux-ping'
set -g @plugin 'thewtex/tmux-mem-cpu-load'

# set -g @plugin 'maxpetretta/tmux-monokai-pro'

set -g @resurrect-strategy-nvim 'session'

# install tpm and plugins automatically (https://github.com/tmux-plugins/tpm/blob/master/docs/automatic_tpm_installation.md)
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
# MANUALLY INSTALLATION OF TPM IN CASE OF FAILURE OF THE ABOVE SCRIPT:
# run-shell "mkdir -p ~/.tmux/plugins/"
# run-shell "git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm"

run '~/.tmux/plugins/tpm/tpm'

# Hit prefix + I to install plugins for the first time. 
# It takes few seconds. So, wait before panic.
# 
# resurrect key bindings:
#   prefix + Ctrl-s - save
#   prefix + Ctrl-r - restore
#


# tmux plugin manager (keep this line at the very bottom of tmux.conf)
# run -b '~/.tmux/plugins/tpm/tpm && ~/.tmux/plugins/tpm/bin/update_plugins'
